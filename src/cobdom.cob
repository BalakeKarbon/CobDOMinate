000100 IDENTIFICATION DIVISION.
000200 PROGRAM-ID. COBDOM.
000300 ENVIRONMENT DIVISION.
000400 CONFIGURATION SECTION.
000500 SOURCE-COMPUTER. UNIX-LINUX.
000600 OBJECT-COMPUTER. WASM.
000700 INPUT-OUTPUT SECTION.
000800 FILE-CONTROL.
000900 DATA DIVISION.
001000 FILE SECTION.
001100 WORKING-STORAGE SECTION.
001200 COPY './data/js.cpy'.
001300 LINKAGE SECTION.
001400 01 LS-VERSION PIC 99V99.
001500 01 LS-ELEMENT-VARIABLE PIC X(128).
001600 01 LS-ELEMENT-TYPE PIC X(128).
001700 01 LS-PARENT PIC X(128).
001800 01 LS-RETURN PIC S9.
001900 PROCEDURE DIVISION.
002000 COBDOM-VERSION SECTION.
002100 ENTRY 'COBDOM-VERSION' USING BY REFERENCE LS-VERSION.
002200*I think by reference is redundant here.
002300   MOVE .01 TO LS-VERSION.
002400*  CALL 'emscripten_run_script_int' USING BY CONTENT WS-JS-TEST.
002500*  MOVE FUNCTION TRIM('div', TRAILING) TO WS-ELEMENT-TYPE.
002600*  DISPLAY WS-ELEMENT-TYPE '.'.
002700   GOBACK.
002800 COBDOM-CREATE-ELEMENT SECTION.
002900 ENTRY 'COBDOM-CREATE-ELEMENT' USING BY 
003000   REFERENCE LS-ELEMENT-VARIABLE, LS-RETURN, 
003100   LS-ELEMENT-TYPE.
003200   STRING 
003300     PART-A OF STATUS-WRAPPER OF WS-JS-COMMANDS DELIMITED BY SIZE
003400     LS-ELEMENT-VARIABLE
003500     PART-A OF CREATE-ELEMENT OF WS-JS-COMMANDS
003600     LS-ELEMENT-TYPE
003700     PART-B OF CREATE-ELEMENT OF WS-JS-COMMANDS DELIMITED BY SPACE
003800     PART-B OF STATUS-WRAPPER OF WS-JS-COMMANDS DELIMITED BY SIZE
003900     WS-NULL-BYTE DELIMITED BY SIZE
004000*The null byte is needed because were passing C strings to
004100*emscripten's API.
004200   INTO WS-JS-COMMAND END-STRING.
004300   DISPLAY WS-JS-COMMAND.
004400   CALL 'emscripten_run_script_int' USING BY REFERENCE
004500     WS-JS-COMMAND RETURNING LS-RETURN.
004600   GOBACK.
004700 COBDOM-APPEND-CHILD SECTION.
004800 ENTRY 'COBDOM-APPEND-CHILD' USING BY REFERENCE
004900   LS-ELEMENT-VARIABLE, LS-RETURN, LS-PARENT.
005000   STRING
005100     PART-A OF STATUS-WRAPPER OF WS-JS-COMMANDS DELIMITED BY SIZE
005200     LS-PARENT
005300     PART-A OF APPEND-CHILD OF WS-JS-COMMANDS
005400     LS-ELEMENT-VARIABLE
005500     PART-B OF APPEND-CHILD OF WS-JS-COMMANDS DELIMITED BY SPACE
005600     PART-B OF STATUS-WRAPPER OF WS-JS-COMMANDS DELIMITED BY SIZE
005700     WS-NULL-BYTE DELIMITED BY SIZE
005800   INTO WS-JS-COMMAND END-STRING.
005900   CALL 'emscripten_run_script_int' USING BY REFERENCE
006000     WS-JS-COMMAND RETURNING LS-RETURN.
006100   GOBACK.
006200 COBDOM-REMOVE-CHILD SECTION.
006300 ENTRY 'COBDOM-REMOVE-CHILD' USING BY REFERENCE
006400   LS-ELEMENT-VARIABLE, LS-RETURN, LS-PARENT.
006500   STRING
006600     PART-A OF STATUS-WRAPPER OF WS-JS-COMMANDS DELIMITED BY SIZE
006700     LS-PARENT
006800     PART-A OF REMOVE-CHILD OF WS-JS-COMMANDS
006900     LS-ELEMENT-VARIABLE
007000     PART-B OF REMOVE-CHILD OF WS-JS-COMMANDS DELIMITED BY SPACE
007100     PART-B OF STATUS-WRAPPER OF WS-JS-COMMANDS DELIMITED BY SIZE
007200     WS-NULL-BYTE DELIMITED BY SIZE
007300   INTO WS-JS-COMMAND END-STRING.
007400   CALL 'emscripten_run_script_int' USING BY REFERENCE 
007500     WS-JS-COMMAND RETURNING LS-RETURN.
007600   GOBACK.
007700*TO-DO put returns in these functions to verify success! This
007800*This will have to be done by wrapping scripts into a function
007900*with a try catch statement or something of the sort.
008000*COBDOM-INNER-HTML SECTION.
008100*ENTRY 'COBDOM-INNER-HTML' USING
008200*So here this gets crazy, since we are using eval, we can return
008300*the variable name, or we could store the objects in a structure
008400*and return its key/index, or we could create and add it relying
008500*only on the id.
